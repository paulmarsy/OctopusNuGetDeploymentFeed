{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string"
        },
        "virtualNetworkResourceGroupName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "virtualNetworkSubnetName": {
            "type": "string"
        },
        "appPort": {
            "type": "int"
        }
    },
    "variables": {
        "loadBalancerName": "[concat(parameters('name'), 'LoadBalancer')]",
        "vnetId": "[resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('virtualNetworkSubnetName'))]",
        "fabricHttpGatewayPort": 19080,
        "fabricTcpGatewayPort": 19000
    },
    "resources": [{
        "apiVersion": "2015-06-15",
        "name": "[variables('loadBalancerName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "properties": {
            "frontendIPConfigurations": [{
                "name": "Frontend",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    }
                }
            }],
            "backendAddressPools": [{
                "name": "Backend"
            }],
            "loadBalancingRules": [{
                "name": "HTTP",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/Frontend')]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/Backend')]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/HttpProbe')]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[parameters('appPort')]",
                    "backendPort": "[parameters('appPort')]"
                }
            }, {
                "name": "FabricTcpGateway",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/Frontend')]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/Backend')]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/FabricTcpGatewayProbe')]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[variables('fabricTcpGatewayPort')]",
                    "backendPort": "[variables('fabricTcpGatewayPort')]"
                }
            }, {
                "name": "FabricHttpGateway",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/Frontend')]"
                    },
                    "backendAddressPool": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/Backend')]"
                    },
                    "probe": {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/FabricHttpGatewayProbe')]"
                    },
                    "protocol": "Tcp",
                    "frontendPort": "[variables('fabricHttpGatewayPort')]",
                    "backendPort": "[variables('fabricHttpGatewayPort')]"
                }
            }],
            "probes": [{
                    "name": "HttpProbe",
                    "properties": {
                        "protocol": "Http",
                        "port": "[parameters('appPort')]",
                        "requestPath": "/lbprobe"
                    }
                }, {
                    "name": "FabricTcpGatewayProbe",
                    "properties": {
                        "protocol": "Tcp",
                        "port": "[variables('fabricTcpGatewayPort')]"
                    }
                },
                {
                    "name": "FabricHttpGatewayProbe",
                    "properties": {
                        "protocol": "Tcp",
                        "port": "[variables('fabricHttpGatewayPort')]"
                    }
                }
            ]
        }
    }],
    "outputs": {
        "ipAddress": {
            "type": "string",
            "value": "[reference(variables('loadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
        },
        "subnetRef": {
            "type": "string",
            "value": "[variables('subnetRef')]"
        }
    }
}